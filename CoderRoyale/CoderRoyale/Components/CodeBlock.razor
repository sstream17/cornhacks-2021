@inject IJSRuntime JSRuntime
@inject SolutionExecutionService SolutionExecutor

<div>
	<textarea id="codearea"></textarea>

	<div class="buttonContainer">
		<button @onclick="OnSubmit" class="submitButton">Submit</button>
	</div>
</div>

@code {
	[Parameter]
	public string Id { get; set; }

	private string Code;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{

			await JSRuntime.InvokeVoidAsync("loadCodeEditor", DotNetObjectReference.Create(this));
		}
	}

	[JSInvokable("UpdateField")]
	public Task UpdateField(string codeValue)
	{
		Code = codeValue;
		StateHasChanged();
		return Task.CompletedTask;
	}

	private async void OnSubmit()
	{
		await SolutionExecutor.CheckSolution(Id, Code);
	}
}
