@page "/game"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

<div class="round">
	<p>Round @currentRound</p>
</div>

<div class="timer">
	<p>@convertTime(secondsRemaining)</p>
</div>

<div class="players">
	<img class="playerIcon" src="/img/test_image.png" height="50px" width="50px">
	<img class="playerIcon" src="/img/test_image.png" height="50px" width="50px">
	<img class="playerIcon" src="/img/test_image.png" height="50px" width="50px">
	<img class="playerIcon" src="/img/test_image.png" height="50px" width="50px">
	<img class="playerIcon" src="/img/test_image.png" height="50px" width="50px">
</div>

<div class="problemDescription">
	<p> THIS IS WHERE THE PROBLEM EXAMPLE WILL GO</p>
</div>

<div class="codeBlockContainer">
	<CodeBlock Id="@connection.ConnectionId"></CodeBlock>
</div>

<div class="d-flex justify-content-center">
	<ConsoleOutput Text="@text"></ConsoleOutput>

	<ConsoleOutput IsOpponents="true"></ConsoleOutput>
</div>


@code {
	//TODO get from server
	private int secondsRemaining = 235;
	private int currentRound = 1;
	private HubConnection connection;
	private string text;

	// Converts seconds to 0:00 format
	private string convertTime(int seconds)
	{
		string minutesLeft = (seconds / 60).ToString();
		string secondsLeft = (seconds % 60).ToString("00");
		return minutesLeft + ":" + secondsLeft;
	}

	protected override async Task OnInitializedAsync()
	{
		connection = new HubConnectionBuilder()
			.WithUrl(NavigationManager.ToAbsoluteUri("/gamehub"))
			.Build();

		connection.On<string, int, string>("ReceiveExecutionResults",
			(submittedUser,
			timeSubmitted,
			output) =>
			{
				if (submittedUser.Equals(connection.ConnectionId))
				{
				// Update your output
			}
				else
				{
				// Update opponent output
			}

				text = $"{submittedUser} {timeSubmitted} {output}";

				StateHasChanged();
			});

		await connection.StartAsync();
	}
}
